package klf.common.utils;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import com.google.gson.Gson;


public class SSMessageUtils {

	
	public static boolean sendPaste(String phone, String code, String tpl_id) {
		Gson gson = new Gson();
		try {
		
			URL url = new URL("http://apis.haoservice.com/sms/sendv2");
			System.out.println(url);
			HttpURLConnection connection = (HttpURLConnection) url.openConnection();
			connection.setDoOutput(true);
			connection.setDoInput(true);
			connection.setUseCaches(false);
			connection.setRequestMethod("POST");//
			connection.setInstanceFollowRedirects(true);
			connection.setConnectTimeout(60000);
			connection.setRequestProperty("Content-Type",
					"application/x-www-form-urlencoded");
			StringBuffer params = new StringBuffer();
			connection.connect();
			params.append("mobile="+phone).append("&").append("tpl_id=" + tpl_id).append("&")
			.append("content="+URLEncoder.encode(code,"utf-8") ).append("&")
			.append("key=589ce6b0c9db4aca82321d3cfb5932ac");
			OutputStream outputStream = connection.getOutputStream();
			System.out.println(params.toString());
			byte[] data = params.toString().getBytes("UTF-8");
			outputStream.write(data);
			outputStream.flush();
			outputStream.close();
			BufferedReader reader = new BufferedReader(new InputStreamReader(
					connection.getInputStream()));
			String line;
			while ((line = reader.readLine()) != null) {
				ResultJsonBean resultJsonBean = gson.fromJson(line,
						ResultJsonBean.class);
				if (resultJsonBean != null) {
					if ("0".equals(resultJsonBean.getError_code())) {
						return true;
					} else {
						//System.out.println(resultJsonBean.getReason().getBytes());
						System.out.println(new String(resultJsonBean.getReason().getBytes(),"UTF-8"));
						return false;
					}
				}
			}
			reader.close();
			connection.disconnect();
		} catch (MalformedURLException e) {
			System.out.println(e.toString());
			e.printStackTrace();
		} catch (ProtocolException e) {
			System.out.println(e.toString());
			e.printStackTrace();
		} catch (IOException e) {
			System.out.println(e.toString());
			e.printStackTrace();
		} catch (Exception e) {
			System.out.println(e.toString());
			e.printStackTrace();
		}
		return false;
	}
	
	/**
	 * 产生4位随机数(0000-9999)
	 * 
	 * @return 4位随机数
	 */
	public static String getFourRandom() {
		Random random = new Random();
		String fourRandom = random.nextInt(10000) + "";
		int randLength = fourRandom.length();
		if (randLength < 4) {
			for (int i = 1; i <= 4 - randLength; i++)
				fourRandom = "0" + fourRandom;
		}
		return fourRandom;
	}
}
